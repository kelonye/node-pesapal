/**
 * Module exports.
 */
var OAuthSimple = require('oauthsimple');
var xmlbuilder = require('xmlbuilder');

// expose

module.exports = Pesapal;

/**
 * Create new 
 */
function Pesapal(opts){
  if (!(this instanceof Pesapal)) return new Pesapal(opts);

  opts = opts || {};

  var keys = [
    'consumerKey',
    'consumerSecret'
  ];
  for (var i=0; i<keys.length; i++){
    var key = keys[i];
    var val = opts[key];
    if (!val) throw new Error(key+' is required');
    this[key] = val;
  }

  if (!opts.hasOwnProperty('testing')) {
    this.testing = false;
  } else {
    this.testing = opts.testing;
  }

}


/**
 * PostPesapalDirectOrderV4
 * 
 * Use this to build url to call to PesaPal.
 * PesaPal will present the user with a page which contains the available payment options and,
 * will redirect to your site once the user has completed the payment process.
 *
 * @param {Object} params - request details e.g. callback url
 * @param {Object} requestData - order details
 * @return {String} pesapal request url
 */
Pesapal.prototype.postDirectOrder = function(params, requestData){

  var defaultRequestData = {
    'Amount': '',
    'Description': '',
    'Type': 'MERCHANT',
    'Reference': '',
    'Email': '',
    'PhoneNumber': '',
    // optional
    'Currency': '',
    'FirstName': '',
    'LastName': '',
    'LineItems': [
      // {
      //     'uniqueId': '',
      //     'particulars': '',
      //     'quantity': '',
      //     'unitCost': '',
      //     'subTotal': ''
      // }
    ]
  };

  // validate xml data
  this.validateOptions(requestData, defaultRequestData);

  update(requestData, defaultRequestData);

  var lineItems = requestData.LineItems || [];
  delete requestData.LineItems;

  var xml = xmlbuilder.create('PesapalDirectOrderInfo');

  for (var k in requestData){
    xml.att(k, requestData[k]);
  }

  var rootAttrs = {
    'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',
    'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',
    'xmlns': 'http://www.pesapal.com',
  };
  for (var k in rootAttrs){
    xml.att(k, rootAttrs[k]);
  }

  // line items
  if (lineItems.length){
    var el = xml.ele('lineitems');
    lineItems.forEach(function(item){
      el.ele('lineitem', item, '');
    });
  }

  // // pesapalRequestData
  var pesapalRequestData = xml.end({ pretty: true});

  var defaultParams = {
    'oauth_callback': '',
    //'oauth_consumer_key': '',
    //'oauth_nonce': '',
    //'oauth_signature': '',
    //'oauth_signature_method': '',
    //'oauth_timestamp': '',
    //'oauth_version': '1.0',
    'pesapal_request_data': pesapalRequestData
  }

  var httpUrl = 'PostPesapalDirectOrderV4';
  
  return this.createOauthRequest(httpUrl, params, defaultParams);

};


/**
 * Use this to query the status of the transaction.
 * When a transaction is posted to PesaPal, it may be in a PENDING, COMPLETED or FAILED state.
 * If the transaction is PENDING, the payment may complete or fail at a later stage.
 * Both the unique order id generated by your system and the pesapal tracking id are required as input parameters.
 * 
 * @param {Object} params - request details
 * @return {String} pesapal request url
 */
Pesapal.prototype.queryPaymentStatus = function(params){

  var httpUrl = 'QueryPaymentStatus';

  var defaultParams = {
    'pesapal_merchant_reference': '',
    'pesapal_transaction_tracking_id': ''
  }
  
  return this.createOauthRequest(httpUrl, params, defaultParams);

};


/**
 * Same as QueryPaymentStatus,
 * but only the unique order id genereated by your system is required as the input parameter.
 * 
 * @param {Object} params - request details
 * @return {String} pesapal request url
 */
Pesapal.prototype.queryPaymentStatusByMerchantRef = function(params){

  var httpUrl = 'QueryPaymentStatusByMerchantRef';

  var defaultParams = {
    'pesapal_merchant_reference': ''
  };

  return this.createOauthRequest(httpUrl, params, defaultParams);

};


/**
 * Same as QueryPaymentStatus, but additional information is returned.
 * 
 * @param {Object} params - request details
 * @return {String} pesapal request url
 */
Pesapal.prototype.queryPaymentDetails = function(params){

  var httpUrl = 'QueryPaymentDetails';

  var defaultParams = {
    'pesapal_merchant_reference': '',
    'pesapal_transaction_tracking_id': ''
  };

  return this.createOauthRequest(httpUrl, params, defaultParams);

};


/**
 * method to validate passed options
 */
Pesapal.prototype.validateOptions = function(options, defaultOptions){

  for (var k in options){
    var v = options[k];
    if (!defaultOptions.hasOwnProperty(k)) throw new Error('Option '+k+' not found in '+defaultOptions.keys())
  }

};


/**
 * Method to build and return oauth request.
 */
Pesapal.prototype.createOauthRequest = function(httpUrl, params, defaultParams){

  this.validateOptions(params, defaultParams)

  var params = update(params, defaultParams)
  var http_method = 'GET'
  // var token = params.pop('token', None)
  var base_url = (!this.testing) ? 'https://www.pesapal.com/api/' : 'https://demo.pesapal.com/api/';
  var url = base_url + httpUrl
  var opts = {
    action: http_method,
    path: url,
    parameters: params,
  };

  var signer = new OAuthSimple(this.consumerKey, this.consumerSecret);
  return signer.sign(opts).signed_url;

};


/**
 * Update object `a` with `b` keys.
 */
function update(a, b){
  for (var k in b){
    if (!a[k]) a[k] = b[k];
  }
  return a;
}